(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{364:function(e,a,t){"use strict";t.r(a);var s=t(45),i=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("div",[t("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/releases/latest"}},[t("img",{attrs:{src:"https://img.shields.io/github/release/christian-schlichtherle/bali-di-scala.svg",alt:"Release Notes"}})]),e._v(" "),t("a",{attrs:{href:"https://search.maven.org/artifact/global.namespace.bali/bali-scala_2.13"}},[t("img",{attrs:{src:"https://img.shields.io/maven-central/v/global.namespace.bali/bali-scala_2.13",alt:"Maven Central"}})]),e._v(" "),t("a",{attrs:{href:"https://www.apache.org/licenses/LICENSE-2.0"}},[t("img",{attrs:{src:"https://img.shields.io/github/license/christian-schlichtherle/bali-di-scala.svg",alt:"Apache License 2.0"}})]),e._v(" "),t("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/actions?query=workflow%3Atest"}},[t("img",{attrs:{src:"https://github.com/christian-schlichtherle/bali-di-scala/workflows/test/badge.svg",alt:"Test Workflow"}})])]),e._v(" "),t("h1",{attrs:{id:"scala-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scala-guide"}},[e._v("#")]),e._v(" Scala Guide")]),e._v(" "),t("p",[e._v("Bali DI for Scala is a pure def macro which transforms the abstract syntax tree to automate dependency injection.\nIt currently supports Scala 2.13, with Scala 3 on the roadmap.")]),e._v(" "),t("p",[e._v("This project is a sibling of "),t("RouterLink",{attrs:{to:"/guide/java.html"}},[e._v("Bali DI for Java")]),e._v(".\nAs a sibling, it is based on the exact same concepts and aims for eventual feature parity.")],1),e._v(" "),t("blockquote",[t("p",[e._v("Bali is also an "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bali",target:"_blank",rel:"noopener noreferrer"}},[e._v("island"),t("OutboundLink")],1),e._v(' between Java and Lombok in Indonesia.\nFor disambiguation, the name of this project is "Bali DI", not just "Bali", where DI is an acronym for\n'),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Dependency_injection",target:"_blank",rel:"noopener noreferrer"}},[t("em",[e._v("dependency injection")]),t("OutboundLink")],1),e._v('.\nIn code however, the term "DI" is dropped because there is no ambiguity in this context.')])]),e._v(" "),t("h2",{attrs:{id:"getting-started"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[e._v("#")]),e._v(" Getting Started")]),e._v(" "),t("p",[e._v("Bali DI for Scala is implemented as a def macro for the Scala compiler.\nIf you use SBT, you need to add the following dependency to your project:")]),e._v(" "),t("div",{staticClass:"language-sbt extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('libraryDependencies += "global.namespace.bali" %% "bali-scala" % "0.4.5" % Provided\n')])])]),t("p",[e._v("Note that this is a compile-time-only dependency - there is no runtime dependency of your code on Bali DI for Scala!")]),e._v(" "),t("h2",{attrs:{id:"sample-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sample-code"}},[e._v("#")]),e._v(" Sample Code")]),e._v(" "),t("p",[e._v("This project uses a modular build.\nThe module "),t("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/tree/main/scala-sample",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("bali-scala-sample")]),t("OutboundLink")],1),e._v("\nprovides lots of sample code showing how to use the annotations and generated source code.\nThe module is not published on Maven Central however - it is only available as source code.\nYou can browse the source code\n"),t("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/tree/main/scala-sample/src/main/scala/bali/scala/sample",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("\nor clone this project.")]),e._v(" "),t("p",[e._v("The module is organized into different packages with each package representing an individual, self-contained showcase.\nFor example, the package\n"),t("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/tree/main/scala-sample/src/main/scala/bali/scala/sample/greeting",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("bali.scala.sample.greeting")]),t("OutboundLink")],1),e._v('\nshowcases a glorified way to produce a simple "Hello world!" message by using different components with dependency\ninjection.')])])}),[],!1,null,null,null);a.default=i.exports}}]);