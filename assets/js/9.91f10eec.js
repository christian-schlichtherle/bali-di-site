(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{364:function(t,a,e){"use strict";e.r(a);var s=e(45),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",[e("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/releases/latest"}},[e("img",{attrs:{src:"https://img.shields.io/github/release/christian-schlichtherle/bali-di-scala.svg",alt:"Release Notes"}})]),t._v(" "),e("a",{attrs:{href:"https://search.maven.org/artifact/global.namespace.bali/bali-scala_2.13"}},[e("img",{attrs:{src:"https://img.shields.io/maven-central/v/global.namespace.bali/bali-scala_2.13",alt:"Maven Central"}})]),t._v(" "),e("a",{attrs:{href:"https://www.apache.org/licenses/LICENSE-2.0"}},[e("img",{attrs:{src:"https://img.shields.io/github/license/christian-schlichtherle/bali-di-scala.svg",alt:"Apache License 2.0"}})]),t._v(" "),e("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/actions?query=workflow%3Atest"}},[e("img",{attrs:{src:"https://github.com/christian-schlichtherle/bali-di-scala/workflows/test/badge.svg",alt:"Test Workflow"}})])]),t._v(" "),e("h1",{attrs:{id:"scala-guide"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scala-guide"}},[t._v("#")]),t._v(" Scala Guide")]),t._v(" "),e("p",[t._v("Bali DI for Scala is a pure def macro which transforms the abstract syntax tree to automate dependency injection.\nIt currently supports Scala 2.13, with Scala 3 on the roadmap.")]),t._v(" "),e("p",[t._v("This project is a sibling of "),e("RouterLink",{attrs:{to:"/guide/java.html"}},[t._v("Bali DI for Java")]),t._v(".\nAs a sibling, it is based on the exact same concepts and aims for eventual feature parity.")],1),t._v(" "),e("blockquote",[e("p",[t._v("Bali is also an "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bali",target:"_blank",rel:"noopener noreferrer"}},[t._v("island"),e("OutboundLink")],1),t._v(' between Java and Lombok in Indonesia.\nFor disambiguation, the name of this project is "Bali DI", not just "Bali", where DI is an acronym for\n'),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Dependency_injection",target:"_blank",rel:"noopener noreferrer"}},[e("em",[t._v("dependency injection")]),e("OutboundLink")],1),t._v('.\nIn code however, the term "DI" is dropped because there is no ambiguity in this context.')])]),t._v(" "),e("h2",{attrs:{id:"getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),e("p",[t._v("Bali DI for Scala is implemented as a def macro for the Scala compiler.\nIf you use SBT, you need to add the following dependency to your project:")]),t._v(" "),e("div",{staticClass:"language-sbt extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('libraryDependencies += "global.namespace.bali" %% "bali-scala" % "0.4.5" % Provided\n')])])]),e("p",[t._v("Note that this is a compile-time-only dependency - there is no runtime dependency of your code on Bali DI for Scala!")]),t._v(" "),e("h2",{attrs:{id:"sample-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sample-code"}},[t._v("#")]),t._v(" Sample Code")]),t._v(" "),e("p",[t._v("This project uses a modular build.\nThe module "),e("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/tree/main/scala-sample",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("bali-scala-sample")]),e("OutboundLink")],1),t._v("\nprovides lots of sample code showing how to use the annotations and generated source code.\nThe module is not published on Maven Central however - it is only available as source code.\nYou can browse the source code\n"),e("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/tree/main/scala-sample/src/main/scala/bali/scala/sample",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v("\nor clone this project.")]),t._v(" "),e("p",[t._v("The module is split into different packages with each package representing an individual, self-contained showcase.\nFor example, the package\n"),e("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/tree/main/scala-sample/src/main/scala/bali/scala/sample/greeting",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("bali.scala.sample.greeting")]),e("OutboundLink")],1),t._v('\nshowcases a glorified way to produce a simple "Hello world!" message by using different components with dependency\ninjection.')]),t._v(" "),e("h2",{attrs:{id:"tutorial"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tutorial"}},[t._v("#")]),t._v(" Tutorial")]),t._v(" "),e("h3",{attrs:{id:"weatherstation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#weatherstation"}},[t._v("#")]),t._v(" WeatherStation")]),t._v(" "),e("blockquote",[e("p",[t._v("The source code shown in this section is available\n"),e("a",{attrs:{href:"https://github.com/christian-schlichtherle/bali-di-scala/tree/main/scala-sample/src/main/scala/bali/scala/sample/weatherstation",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("p",[t._v("Let's define our first component:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Clock "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" java"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Date\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("In a component type, every abstract member is a dependency, so the "),e("code",[t._v("Clock")]),t._v(" trait has a single dependency named "),e("code",[t._v("now")]),t._v("\nwith type "),e("code",[t._v("Date")]),t._v(".\nWe want our clock to return a fresh "),e("code",[t._v("Date")]),t._v(" on every call, so "),e("code",[t._v("now")]),t._v(" is declared as a "),e("code",[t._v("def")]),t._v(".\nThis component doesn't have any domain logic, so there are no other members.")]),t._v(" "),e("p",[t._v("Next, let's look at a more advanced component and its companion object:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("bali"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Lookup\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("U "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Lookup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tempValue"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (1)")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Lookup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tempUnit"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" unit"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" U "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (2)")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" toString"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$value%.1fËš $unit"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Temperature "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sealed")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Celsius "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Celsius "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" toString"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Fahrenheit "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Fahrenheit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Fahrenheit "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" toString"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"F"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The component trait "),e("code",[t._v("Temperature")]),t._v(" has two abstract members and thus, two dependencies:")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("value")]),t._v(", with type "),e("code",[t._v("Float")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("unit")]),t._v(", with type "),e("code",[t._v("U <: Temperature.Unit")]),t._v(".")])]),t._v(" "),e("p",[t._v("We want our temperature instances to be immutable, so both members are declared as a "),e("code",[t._v("val")]),t._v(".")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("@Lookup")]),t._v(" annotation on each dependency defines an alias name for it.\nThis is used to bind each dependency to some element in some module context - more on that later.")]),t._v(" "),e("p",[t._v("Next, let's look at our last component:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" WeatherStation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("U "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Clock "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" temp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("U"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" toString"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$now: $temp"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This component also has two dependencies:")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("now")]),t._v(", with type "),e("code",[t._v("Date")]),t._v(", inherited from trait "),e("code",[t._v("Clock")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("temp")]),t._v(", with type "),e("code",[t._v("Temperature[U]")]),t._v(".")])]),t._v(" "),e("p",[t._v("We want our weather station to return a fresh "),e("code",[t._v("Temperature")]),t._v(" on each call, so "),e("code",[t._v("temp")]),t._v(" is declared as a "),e("code",[t._v("def")]),t._v(" again.")]),t._v(" "),e("blockquote",[e("p",[t._v("Note that the component trait "),e("code",[t._v("WeatherStation")]),t._v(" reuses the component trait "),e("code",[t._v("Clock")]),t._v(" by inheritance and the component\ntrait "),e("code",[t._v("Temperature")]),t._v(" by composition:\nThere is no limitation on how you arrange component types into a larger dependency graph.\nBecause dependencies are resolved just-in-time, your dependency graph may even be circular!")])]),t._v(" "),e("p",[t._v("Eventually, all the abstract methods in the components you've seen so far get implemented in a very simple manner by\nforwarding the call as-is to some module context.\nSo for example, the abstract method "),e("code",[t._v("now")]),t._v(" in the component trait "),e("code",[t._v("Clock")]),t._v(" gets implemented as follows:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now\n")])])]),e("p",[t._v("Likewise, if a dependency is declared as a "),e("code",[t._v("val")]),t._v(", then it gets implemented as a "),e("code",[t._v("lazy val")]),t._v(".\nSo for example, the abstract method "),e("code",[t._v("value")]),t._v(" in the component trait "),e("code",[t._v("Temperature")]),t._v(" gets implemented as follows:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lazy")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tempValue\n")])])]),e("p",[t._v("Note that the implementation respects the alias defined by the "),e("code",[t._v('@Lookup("tempValue")')]),t._v(" annotation before.")]),t._v(" "),e("blockquote",[e("p",[t._v("Also, note that a dependency may have type parameters and parameter lists:\nThe parameter lists are also forwarded in this case - more on that later.")])]),t._v(" "),e("p",[t._v("In Scala, a module context is either:")]),t._v(" "),e("ol",[e("li",[t._v("Any place in your code where you call the "),e("code",[t._v("def")]),t._v(" macro "),e("code",[t._v("bali.scala.make")]),t._v(", or")]),t._v(" "),e("li",[t._v("any type annotated with "),e("code",[t._v("@bali.Module")]),t._v(".")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("make")]),t._v(" macro implements a module in place by creating an instance of an anonymous inner class which extends it type\nparameter and then implementing all abstract methods as shown before.")]),t._v(" "),e("p",[t._v("Let's look at an example:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("bali"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scala"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("make")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" MyApp "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" App "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" context "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" now "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Date\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" clock "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" make"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Clock"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (1)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The line with the call to "),e("code",[t._v("make[Clock]")]),t._v(" gets expanded as follows:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" clock "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Clock "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("Note that if the type to make isn't abstract, then no anonymous inner class is created, and the default constructor is\ncalled instead.\nSo for example, a call to "),e("code",[t._v("make[Date]")]),t._v(" simply gets expanded to "),e("code",[t._v("new Date")]),t._v(".")])]),t._v(" "),e("p",[t._v("With this in mind, let's look at the module type for our weather station:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("bali"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Module\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("ThreadLocalRandom\n\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Module")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" WeatherStationModule "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" april"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WeatherStation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (1)")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (2)")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" temp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (3)")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" tempValue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ThreadLocalRandom"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextDouble"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5d")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25d")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toFloat\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" tempUnit "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Celsius\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Like a component type, a module type can also have abstract members (numbered 1 to 3 in this case).\nThe difference is that in a module type, its abstract methods get implemented as a recursive call to the "),e("code",[t._v("make")]),t._v("\nmacro.\nSo for example, the abstract method "),e("code",[t._v("now")]),t._v(" (no. 2 in the previous example) gets implemented as follows:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" make"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (2)")]),t._v("\n")])])]),e("p",[t._v("The call to "),e("code",[t._v("make[Date]")]),t._v(" is then recursively expanded to "),e("code",[t._v("new Date")]),t._v(".")]),t._v(" "),e("blockquote",[e("p",[t._v("Why is this a recursive call?\nBecause you need to call "),e("code",[t._v("make[WeatherStationModule]")]),t._v(" in order to let it implement the method "),e("code",[t._v("now")]),t._v(" in the first\nplace!")])]),t._v(" "),e("p",[t._v("Finally, let's look at some test code for our module:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("bali"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scala"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("make")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("bali"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scala"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sample"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("weatherstation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Celsius\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("matchers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("should"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Matchers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wordspec"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("AnyWordSpec\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Date\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" WeatherStationModuleSpec "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" AnyWordSpec "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A WeatherStationModule"')]),t._v(" should "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" module "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" make"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("WeatherStationModule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (1)")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"report typical April weather"')]),t._v(" in "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      april"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now should not be theSameInstanceAs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("april"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Date should be "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" april"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" temp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" april"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temp\n      temp should not be theSameInstanceAs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("april"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value shouldBe temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n      temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value should be "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5f")]),t._v("\n      temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value should be "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25f")]),t._v("\n      temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unit shouldBe temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unit\n      temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unit shouldBe Celsius\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Putting all the puzzle pieces together, we can conclude that the line with the call to "),e("code",[t._v("make[WeatherStationModule]")]),t._v(" gets\nexpanded by the macro as follows:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" module "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" WeatherStationModule "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lazy")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" april"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WeatherStation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" make"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("WeatherStation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" make"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" temp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" make"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Next, another round is started to recursively expand the generated "),e("code",[t._v("make[...]")]),t._v(" calls and form the final result:")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" module "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" WeatherStationModule "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" context "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lazy")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" april"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WeatherStation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" WeatherStation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" temp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temp\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Date\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" temp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Temperature"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Celsius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lazy")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tempValue\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lazy")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" unit"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Celsius "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tempUnit\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("As you can see, Bali DI automates the generation of a lot of boilerplate code for you, but there's much more to it\nthan just that.\nFor a general discussion of its design concept, features and benefits please check the "),e("RouterLink",{attrs:{to:"/guide/overview.html"}},[t._v("Overview")]),t._v(" page.")],1)])}),[],!1,null,null,null);a.default=n.exports}}]);